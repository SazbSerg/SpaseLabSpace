HashCode()-метод реализован таким образом, что для одного и того-же входного объекта, хеш-код всегда будет одинаковым.
Следует понимать, что множество возможных хеш-кодов ограничено примитивным типом int, а множество объектов ограничено
только нашей фантазией. Отсюда следует утверждение: “Множество объектов мощнее множества хеш-кодов”. Из-за этого
ограничения, вполне возможна ситуация, что хеш-коды разных объектов могут совпасть.

Здесь главное понять, что:
Если хеш-коды разные, то и входные объекты гарантированно разные.
Если хеш-коды равны, то входные объекты не всегда равны.

Ситуация, когда у разных объектов одинаковые хеш-коды называется — коллизией. Вероятность возникновения коллизии
зависит от используемого алгоритма генерации хеш-кода.

Подведём итог:

Сперва, что-бы избежать путаницы, определимся с терминологией. Одинаковые объекты — это объекты одного класса
с одинаковым содержимым полей.

- для одного и того-же объекта, хеш-код всегда будет одинаковым;
- если объекты одинаковые, то и хеш-коды одинаковые (но не наоборот, см. правило 3).
- если хеш-коды равны, то входные объекты не всегда равны (коллизия);
- если хеш-коды разные, то и объекты гарантированно разные;

Для проверки эквивалентности в классе Object существует метод equals(), который сравнивает содержимое объектов
и выводит значение типа boolean true, если содержимое эквивалентно, и false — если нет.